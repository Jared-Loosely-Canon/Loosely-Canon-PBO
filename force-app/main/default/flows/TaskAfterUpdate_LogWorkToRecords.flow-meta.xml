<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Set_Case</name>
        <label>Set Case</label>
        <locationX>50</locationX>
        <locationY>648</locationY>
        <assignmentItems>
            <assignToReference>Get_Case.Total_Minutes_Worked__c</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Minutes_Spent_on_Last_Work__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Related_Record</name>
        <label>Check Related Record</label>
        <locationX>182</locationX>
        <locationY>408</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Related</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WhatId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case</targetReference>
            </connector>
            <label>Case Related</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_To_Calculate_Work_Done</name>
        <label>Check To Calculate Work Done</label>
        <locationX>380</locationX>
        <locationY>288</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Ended_Working</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Working</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Working</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Related_Record</targetReference>
            </connector>
            <label>Ended Working</label>
        </rules>
    </decisions>
    <description>Saves time spent to related record</description>
    <environments>Default</environments>
    <formulas>
        <name>TimeSpentWorking</name>
        <dataType>Number</dataType>
        <expression>({!$Record.Work_Ended_Date_Time__c} - {!$Record.Work_Started_Date_Time__c}) * 24 * 60</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>TaskAfterUpdate_LogWorkToRecords {!$Flow.CurrentDateTime}</interviewLabel>
    <label>TaskAfterUpdate_LogWorkToRecords</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>50</locationX>
        <locationY>528</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>50</locationX>
        <locationY>768</locationY>
        <inputReference>Get_Case</inputReference>
    </recordUpdates>
    <start>
        <locationX>485</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_To_Calculate_Work_Done</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Task</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
